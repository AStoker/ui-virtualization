"bundle";!function(){var a=System.amdDefine;a("app.html!github:systemjs/plugin-text@0.0.3.js",[],function(){return'<template> <require from="nav-bar.html"></require> <require from="bootstrap/css/bootstrap.css"></require> <nav-bar router.bind="router"></nav-bar> <div class="page-host"> <router-view></router-view> </div> </template>'})}(),System.register("app.js",[],function(a,b){function c(a,b){if(!(a instanceof b))throw new TypeError("Cannot call a class as a function")}var d;return{setters:[],execute:function(){a("App",d=function(){function a(){c(this,a)}return a.prototype.configureRouter=function(a,b){a.title="Aurelia UI-Virtualization",a.map([{route:["","list"],name:"list",moduleId:"list",nav:!0,title:"Virtual List"},{route:"multiple",name:"multiple",moduleId:"multiple",nav:!0,title:"Multiple Lists"},{route:"container",name:"container",moduleId:"container",nav:!0,title:"Container"}]),this.router=b},a}()),a("App",d)}}}),function(){var a=System.amdDefine;a("container.html!github:systemjs/plugin-text@0.0.3.js",[],function(){return'<template> <div style="overflow-y:scroll;height:80vh"> <div virtual-repeat.for="item of objectArray" class="contact-list-item ${item.name}"> <div class="contact-item"> <div class="avatar" click.delegate="click()" css="background-color: ${item.color}">${item.firstLetter}</div> <div class="name"> ${$index} ${item.name} </div> <div class="content"> <strong>Phone:</strong> ${item.phone} <br> <strong>Country:</strong> ${item.country} <br> </div> </div> </div> </div> </template>'})}(),System.register("container.js",[],function(a,b){function c(a,b){if(!(a instanceof b))throw new TypeError("Cannot call a class as a function")}var d,e;return{setters:[],execute:function(){d=function(){function a(a,b){for(var c=0;c<b.length;c++){var d=b[c];d.enumerable=d.enumerable||!1,d.configurable=!0,"value"in d&&(d.writable=!0),Object.defineProperty(a,d.key,d)}}return function(b,c,d){return c&&a(b.prototype,c),d&&a(b,d),b}}(),a("Container",e=function(){function a(){c(this,a),this.objectArray=[],this.numberOfItems=1e4,this.isSelected=!1}return a.prototype.createItem=function(a){var b=faker.name.findName();return{firstLetter:b.charAt(0),name:b,color:faker.internet.color(),phone:faker.phone.phoneNumber(),country:faker.address.country()}},a.prototype.activate=function(){for(var a,b=0;b<this.numberOfItems;++b)a=faker.name.findName(),this.objectArray.push(this.createItem(b))},a.prototype.addItems=function(a){for(var b=0;a>b;++b)this.objectArray.push(this.createItem(b))},a.prototype.addItemFirst=function(){this.objectArray.unshift(this.createItem())},a.prototype.removeItems=function(a){this.objectArray.splice(0,a)},a.prototype.addItemLast=function(){this.objectArray.push(this.createItem())},a.prototype.removeLast=function(){this.objectArray.pop()},d(a,[{key:"itemsCount",get:function(){return this.objectArray.length}}]),a}()),a("Container",e)}}}),function(){var a=System.amdDefine;a("list.html!github:systemjs/plugin-text@0.0.3.js",[],function(){return'<template> <div class="array-actions"> <button class="btn btn-primary" click.delegate="addItems(1000)">Add 1000</button> <button class="btn btn-primary" click.delegate="addItems(10000)">Add 10 000</button> <button class="btn btn-primary" click.delegate="addItems(100000)">Add 100 000</button> <button class="btn btn-primary" click.delegate="addItemFirst()">Add 1 at top</button> <button class="btn btn-primary" click.delegate="removeItems(1)">Remove 1 at top</button> <h3>Item Count: ${itemsCount}</h3> <h3>Number of DOM elements: ${childrenCount}</h3> </div> <div element.ref="parentElement"> <div virtual-repeat.for="item of objectArray" class="contact-list-item ${item.name}"> <div class="contact-item"> <div class="avatar" click.delegate="click()" css="background-color: ${item.color}">${item.firstLetter}</div> <div class="name"> ${$index} ${item.name} </div> <div class="content"> <strong>Phone:</strong> ${item.phone} <br> <strong>Country:</strong> ${item.country} <br> </div> </div> </div> <div> <div class="array-actions"> <button class="btn btn-primary" click.delegate="addItems(1000)">Add 1000</button> <button class="btn btn-primary" click.delegate="addItems(10000)">Add 10 000</button> <button class="btn btn-primary" click.delegate="addItems(100000)">Add 100 000</button> <button class="btn btn-primary" click.delegate="addItemFirst()">Add 1 at top</button> <button class="btn btn-primary" click.delegate="addItemLast()">Add 1 at bottom</button> <button class="btn btn-primary" click.delegate="removeItems(1)">Remove 1 at top</button> <h3>Item Count: ${itemsCount}</h3> <h3>Number of DOM elements: ${childrenCount}</h3> </div> </div></div></template>'})}(),System.register("list.js",[],function(a,b){function c(a,b){if(!(a instanceof b))throw new TypeError("Cannot call a class as a function")}var d,e;return{setters:[],execute:function(){d=function(){function a(a,b){for(var c=0;c<b.length;c++){var d=b[c];d.enumerable=d.enumerable||!1,d.configurable=!0,"value"in d&&(d.writable=!0),Object.defineProperty(a,d.key,d)}}return function(b,c,d){return c&&a(b.prototype,c),d&&a(b,d),b}}(),a("List",e=function(){function a(){c(this,a),this.objectArray=[],this.numberOfItems=100,this.isSelected=!1,this.elementsCount=0}return a.prototype.createItem=function(a){var b=faker.name.findName();return{firstLetter:b.charAt(0),name:b,color:faker.internet.color(),phone:faker.phone.phoneNumber(),country:faker.address.country()}},a.prototype.activate=function(){for(var a,b=0;b<this.numberOfItems;++b)a=faker.name.findName(),this.objectArray.push(this.createItem(b))},a.prototype.attached=function(){console.log("attached",this.parentElement)},a.prototype.addItems=function(a){for(var b=0;a>b;++b)this.objectArray.push(this.createItem(b))},a.prototype.addItemFirst=function(){this.objectArray.unshift(this.createItem())},a.prototype.removeItems=function(a){this.objectArray.splice(0,a)},a.prototype.addItemLast=function(){this.objectArray.push(this.createItem())},a.prototype.removeLast=function(){this.objectArray.pop()},d(a,[{key:"itemsCount",get:function(){return this.objectArray.length}},{key:"childrenCount",get:function(){return this.parentElement?this.parentElement.children.length:0}}]),a}()),a("List",e)}}}),System.register("main.js",["bootstrap"],function(a,b){return{setters:[function(a){}],execute:function(){function b(a){a.use.standardConfiguration(),a.use.plugin("aurelia-ui-virtualization"),a.start().then(function(){return a.setRoot()})}a("configure",b)}}}),function(){var a=System.amdDefine;a("multiple.html!github:systemjs/plugin-text@0.0.3.js",[],function(){return'<template> <div> <h1 style="background-color:#fff!important">First List</h1> <div virtual-repeat.for="item of objectArray" class="contact-list-item ${item.name}"> <div class="contact-item"> <div class="avatar" click.delegate="click()" css="background-color: ${item.color}">${item.firstLetter}</div> <div class="name"> ${$index} ${item.name} </div> <div class="content"> <strong>Phone:</strong> ${item.phone} <br> <strong>Country:</strong> ${item.country} <br> </div> </div> </div> <h1 style="background-color:#fff!important">Second List</h1> <div virtual-repeat.for="item of objectArray" class="contact-list-item ${item.name}"> <div class="contact-item"> <div class="avatar" click.delegate="click()" css="background-color: ${item.color}">${item.firstLetter}</div> <div class="name"> ${$index} ${item.name} </div> <div class="content"> <strong>Phone:</strong> ${item.phone} <br> <strong>Country:</strong> ${item.country} <br> </div> </div> </div> <h1 style="background-color:#fff!important">Third List</h1> <div virtual-repeat.for="item of objectArray" class="contact-list-item ${item.name}"> <div class="contact-item"> <div class="avatar" click.delegate="click()" css="background-color: ${item.color}">${item.firstLetter}</div> <div class="name"> ${$index} ${item.name} </div> <div class="content"> <strong>Phone:</strong> ${item.phone} <br> <strong>Country:</strong> ${item.country} <br> </div> </div> </div> </div> </template>'})}(),System.register("multiple.js",[],function(a,b){function c(a,b){if(!(a instanceof b))throw new TypeError("Cannot call a class as a function")}var d,e;return{setters:[],execute:function(){d=function(){function a(a,b){for(var c=0;c<b.length;c++){var d=b[c];d.enumerable=d.enumerable||!1,d.configurable=!0,"value"in d&&(d.writable=!0),Object.defineProperty(a,d.key,d)}}return function(b,c,d){return c&&a(b.prototype,c),d&&a(b,d),b}}(),a("Multiple",e=function(){function a(){c(this,a),this.objectArray=[],this.numberOfItems=100,this.isSelected=!1}return a.prototype.createItem=function(a){var b=faker.name.findName();return{firstLetter:b.charAt(0),name:b,color:faker.internet.color(),phone:faker.phone.phoneNumber(),country:faker.address.country()}},a.prototype.activate=function(){for(var a,b=0;b<this.numberOfItems;++b)a=faker.name.findName(),this.objectArray.push(this.createItem(b))},a.prototype.addItems=function(a){for(var b=0;a>b;++b)this.objectArray.push(this.createItem(b))},a.prototype.addItemFirst=function(){this.objectArray.unshift(this.createItem())},a.prototype.removeItems=function(a){this.objectArray.splice(0,a)},a.prototype.addItemLast=function(){this.objectArray.push(this.createItem())},a.prototype.removeLast=function(){this.objectArray.pop()},d(a,[{key:"itemsCount",get:function(){return this.objectArray.length}}]),a}()),a("Multiple",e)}}}),function(){var a=System.amdDefine;a("nav-bar.html!github:systemjs/plugin-text@0.0.3.js",[],function(){return'<template bindable="router"> <nav class="navbar navbar-default navbar-fixed-top" role="navigation"> <div class="navbar-header"> <button type="button" class="navbar-toggle" data-toggle="collapse" data-target="#skeleton-navigation-navbar-collapse"> <span class="sr-only">Toggle Navigation</span> <span class="icon-bar"></span> <span class="icon-bar"></span> <span class="icon-bar"></span> </button> <a class="navbar-brand" href="#"> <i class="fa fa-home"></i> <span>${router.title}</span> </a> </div> <div class="collapse navbar-collapse" id="skeleton-navigation-navbar-collapse"> <ul class="nav navbar-nav"> <li repeat.for="row of router.navigation" class="${row.isActive ? \'active\' : \'\'}"> <a data-toggle="collapse" data-target="#skeleton-navigation-navbar-collapse.in" href.bind="row.href">${row.title}</a> </li> </ul> <ul class="nav navbar-nav navbar-right"> <li class="loader" if.bind="router.isNavigating"> <i class="fa fa-spinner fa-spin fa-2x"></i> </li> </ul> </div> </nav> </template>'})}();